@mixin animation($str) {
  animation: $str;
}

@mixin background-gradient($direction, $startColor, $startColorAmount, $endColor, $endColorAmount) {
  background: linear-gradient($direction, $startColor $startColorAmount, $endColor $endColorAmount);
  background-color: $startColor;
  filter: progid:dximagetransform.microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

@mixin box-shadow {
  box-shadow: 0.5rem 0.9rem 1.5rem rgba(0, 0, 0, 0.25);
}

@mixin ellipsis {
  &::after {
    content: '\2026';
  }
}

@mixin icon($unicode) {
  content: $unicode;
  font-family: $font-stack-icons;
  font-weight: 900;
}

@mixin spinner-colour($colour) {
  border-color: $colour;
  border-right-color: transparent;
}

@mixin text-overflow-ellipsis {
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
}

@mixin theme($colour-bg1, $colour-bg2, $colour-bg3, $colour-text1, $colour-text2, $colour-text3) {
  & {
    color: $colour-text1;

    @media (hover: hover) {
      a {
        &:active {
          border-bottom-color: $colour-bg2;
          color: $colour-bg2;
        }

        &:focus,
        &:hover {
          border-bottom-color: $colour-bg2;
          color: $colour-bg2;
        }
      }
    }

    button {
      &.btn-default {
        background-color: rgba($colour-text1, 0.3);
        border-color: $colour-bg3;
        color: $colour-text1;

        @media (hover: hover) {
          &:not([disabled]):active {
            background-color: $colour-text1;
            border-color: $colour-text1;
            color: $colour-bg2;
          }

          &:not([disabled]):hover {
            background-color: $colour-bg3;
            border-color: $colour-bg3;
            color: $colour-bg2;
          }
        }

        &[disabled] {
          background-color: rgba($colour-bg3, 0.3);
          border-color: $colour-bg3;
          color: $colour-text1;
        }
      }

      &.btn-fab {
        background-color: $colour-text2;
        color: $colour-text1;

        @media (hover: hover) {
          &:active {
            background-color: $colour-bg2 !important;
            color: $colour-text1 !important;
          }
        }
      }

      &.btn-icon {
        color: $colour-text2;
      }

      .spinner-border-sm {
        @include spinner-colour($colour-text2);
      }
    }

    .alert {
      background-color: rgba($colour-danger, 0.9);
      color: $colour-text1;

      @media (hover: hover) {
        a {
          &:active,
          &:focus,
          &:hover {
            border-bottom-color: $colour-text2;
            color: $colour-text2;
          }
        }
      }

      button.btn-close {
        color: $colour-text1;
      }

      @media (hover: hover) {
        p:hover {
          color: $colour-text1;
        }
      }
    }

    .checkbox {
      background: darken($colour-bg2, 50%);

      input[type='checkbox'] {
        & + label {
          background: scale-color($colour-bg2, $lightness: -30%, $saturation: -70%);
        }

        &:checked + label {
          background: $colour-bg2;
        }
      }
    }

    .form-group {
      &.btn-icon-container {
        .btn-icon {
          background-color: $colour-text2;
          color: $colour-bg3;

          @media (hover: hover) {
            &:focus {
              border-color: darken($colour-text3, 15%);
            }
          }
        }
      }

      &.has-error {
        input,
        textarea {
          &.form-control {
            border-color: $colour-danger !important;
            color: $colour-danger !important;
            &::placeholder {
              color: $colour-danger !important;
            }
          }
        }
      }

      input,
      textarea {
        &.form-control {
          background-color: $colour-bg3;
          border-color: $colour-bg3;
          color: $colour-text2;
          &::placeholder {
            color: $colour-text3;
          }
        }
      }
    }

    .lookahead-container {
      .lookahead,
      .measure {
        color: $colour-text3;
      }
    }

    .progress-bar-success {
      background-color: $colour-success !important;
    }

    .progress-bar-warning {
      background-color: $colour-warning !important;
    }

    .progress-bar-danger {
      background-color: $colour-danger !important;
    }

    .spinner-border {
      @include spinner-colour($colour-bg2);

      animation-duration: 1s;
    }

    .text-success {
      color: $colour-success !important;
    }

    .text-warning {
      color: $colour-warning !important;
    }

    .text-danger {
      color: $colour-danger !important;
    }

    .validation {
      background: $colour-danger;
      color: $colour-text1;
    }

    .well {
      background-color: $colour-bg3;
      color: $colour-text2;

      a {
        border-bottom-color: unset;
      }

      &.dark {
        background-color: $colour-text2;
        color: $colour-text1;

        a {
          border-bottom-color: $colour-text1;

          @media (hover: hover) {
            &:active,
            &:focus,
            &:hover {
              border-bottom-color: inherit;
            }
          }
        }
      }

      .btn.btn-default {
        border-color: $colour-text2;
        color: $colour-text2;

        @media (hover: hover) {
          &:not([disabled]):active {
            background-color: $colour-text2;
            border-color: $colour-text2;
            color: $colour-bg2;
          }

          &:not([disabled]):hover {
            background-color: $colour-text2;
            border-color: $colour-text2;
            color: $colour-bg2;
          }
        }

        &[disabled] {
          border-color: $colour-text2;
          color: $colour-text2;
        }
      }

      .form-group {
        &.has-error {
          input,
          textarea {
            &.form-control {
              border-color: $colour-danger !important;
              color: $colour-danger !important;
              &::placeholder {
                color: $colour-danger !important;
              }
            }
          }
        }

        input,
        textarea {
          &.form-control {
            border-color: $colour-text2 !important;
          }
        }
      }
    }
  }

  #bookmark-panel {
    .btn-delete-bookmark {
      background-color: $colour-danger;
      color: $colour-text1;

      @media (hover: hover) {
        &:not([disabled]):active,
        &:not([disabled]):hover {
          background-color: $colour-bg3;
          border-color: $colour-bg3;
          color: $colour-danger;
        }
      }
    }

    .tags-container {
      .badge {
        background-color: $colour-text2;
        color: rgba($colour-text1, 0.9);

        @media (hover: hover) {
          &:active i {
            color: $colour-bg2 !important;
          }

          &:hover,
          &:focus {
            i {
              color: $colour-bg2;
            }
          }
        }

        i {
          color: $colour-text3;
        }
      }
    }

    .tags-input-container {
      background-color: $colour-bg3;
    }
  }

  #information-panel {
    background-color: rgba($colour-text2, 0.5);
  }

  #login-panel {
    .btn-validating {
      background-color: $colour-bg3;
      border-color: $colour-bg3;
      color: $colour-bg2;

      .spinner-border-sm {
        @include spinner-colour($colour-bg2);
      }
    }

    .form-content,
    .selected-service {
      @media (hover: hover) {
        a {
          &:active,
          &:focus,
          &:hover {
            border-bottom-color: $colour-text2;
            color: $colour-text2;
          }
        }
      }
    }

    .form-group input {
      border-color: $colour-bg3;
    }

    .secret-form-group {
      .progress {
        border-color: $colour-bg3;

        .progress-bar {
          background-color: $colour-danger;
        }
      }

      .progress-bar-background {
        background-color: $colour-bg3;
      }
    }

    .selected-service .status-icon {
      .loading .spinner-border {
        border-color: $colour-bg3;
      }

      .status-icon-bg {
        background-color: $colour-bg3;
      }
    }

    .update-service-panel ul li label {
      color: $colour-text2 !important;
    }
  }

  #scan-panel {
    .buttons button {
      background-color: $colour-bg3;
      color: $colour-text2;

      &.enabled {
        color: $colour-warning;
      }
    }
  }

  #search-panel {
    .view-content {
      .header-panel .search-form {
        background-color: $colour-bg3;

        label {
          color: $colour-text3;
        }

        input::placeholder {
          color: $colour-text3;
        }
      }
    }
  }

  #settings-panel {
    .setting-group {
      .description {
        color: $colour-text3;
      }

      .setting-value {
        color: $colour-text2;
      }
    }

    .sync-panel {
      .progress {
        background-color: darken($colour-bg2, 50%);

        .progress-bar {
          background-color: $colour-bg2;
        }
      }

      .max {
        color: $colour-text2;
      }

      .used {
        color: $colour-bg2;
      }

      .status-text {
        color: $colour-text3;
      }
    }
  }

  #working-panel {
    h3 {
      color: $colour-bg2;
    }
  }
}

@mixin theme-default() {
  .theme-default & {
    @content;
  }
}

@mixin theme-dark() {
  .theme-dark & {
    @content;
  }
}

@mixin valign {
  bottom: 0;
  margin: auto;
  position: absolute;
  top: 0;
}

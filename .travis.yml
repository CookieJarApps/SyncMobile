language: node_js
jdk: oraclejdk8
env:
  global:
    - JAVA_HOME=/usr/lib/jvm/java-8-oracle
    - ANDROID_VERSION=28 # Android 9 (API level 28)
    - BUILD_TOOLS_VERSION=30.0.2
    - NODEJS=lts/*
    - CORDOVA_CLI=9.x
matrix:
  include:
    - os: linux
      sudo: false
      language: android
      android:
        components:
          - tools
          - platform-tools
          - tools
          - build-tools-$BUILD_TOOLS_VERSION
          - android-$ANDROID_VERSION
          - extra-google-google_play_services
          - extra-google-m2repository
          - extra-android-m2repository
      addons:
        apt:
          chrome: stable
          packages:
            - oracle-java8-installer
            - oracle-java8-set-default
            - jq
            - gradle
      licenses:
        - android-sdk-preview-license-.+
        - android-sdk-license-.+
        - google-gdk-license-.+
  allow_failures:
    - os: osx
      language: objective-c
      osx_image: xcode8.3
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
  - rm -rf $HOME/.gradle/caches/3.5/fileHashes/
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - '$HOME/.gradle/caches/'
    - '$HOME/.gradle/wrapper/'
before_install:
  - export LANG=en_US.UTF-8
  - export CHROME_BIN=google-chrome
  - nvm install $NODEJS
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - yes | sdkmanager "platforms;android-27"
  - npm install -g cordova@$CORDOVA_CLI
  - cordova telemetry off
  - export PATH=/usr/local/android-sdk/build-tools/$BUILD_TOOLS_VERSION:$PATH
  - echo $PATH
  - pushd /usr/local/android-sdk/
  - ls -l
  - popd
  - pushd /usr/local/android-sdk/build-tools/
  - ls -l
  - popd
  - pushd /usr/local/android-sdk/build-tools/$BUILD_TOOLS_VERSION
  - ls -l
  - popd
install:
  - npm install
  - pushd res/android
  - cordova prepare
  - popd
script:
  # - npm run package:chromium
  # - npm run package:firefox
  - npm run package:android
before_deploy:
  - export XBS_VERSION=$(cat version.txt)
  - git tag v$XBS_VERSION
deploy:
  provider: releases
  # â‹®
  file:
    # - dist/xbrowsersync_$XBS_VERSION_chromium.zip
    # - dist/xbrowsersync_$XBS_VERSION_firefox.zip
    - dist/xbrowsersync_$XBS_VERSION_android.apk
    - dist/xbrowsersync_$XBS_VERSION_android_unsigned.apk
  name: $XBS_VERSION
  on:
    all_branches: true
  prerelease: true
  skip_cleanup: true
  token: ${github_api_key}
branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+$/
